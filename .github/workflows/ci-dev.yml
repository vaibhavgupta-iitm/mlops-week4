name: CI - Dev Branch

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

permissions:
  contents: write
  pull-requests: write


jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Set up DVC
      run: |
        pip install dvc[gcs]
        dvc --version
    
    - name: Configure Git
      run: |
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"
    
    - name: Set up Google Cloud credentials
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
    
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
    
    - name: Setup DVC and pull data/model
      run: |
        dvc remote add -d gcsremote gs://mlops-course-verdant-victory-473118-k0-unique-week2-2/iris-pipeline
        dvc pull iris-dvc-pipeline/v1_data.csv
        dvc pull iris-dvc-pipeline/model.joblib
    
    - name: Run data validation tests
      run: |
        pytest tests/test_data_validation.py -v --cov=src --cov-report=xml
    
    - name: Run model evaluation tests
      run: |
        pytest tests/test_model_evaluation.py -v --cov=src --cov-report=xml
    
    - name: Run full test suite
      run: |
        pytest tests/ -v --cov=src --cov-report=xml --cov-report=html
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: dev
        name: dev-coverage
    
    - name: Run sanity test
      run: |
        python main.py --setup-dvc
    
    - name: Generate test report with CML
      uses: iterative/setup-cml@v1
    
    - name: Create test report
      run: |
        echo "## 🧪 Test Results - Dev Branch" >> report.md
        echo "" >> report.md
        echo "### 📊 Test Summary" >> report.md
        echo "- **Branch**: dev" >> report.md
        echo "- **Commit**: ${{ github.sha }}" >> report.md
        echo "- **Status**: ✅ All tests passed" >> report.md
        echo "" >> report.md
        echo "### 📈 Coverage Report" >> report.md
        echo "Coverage details available in the artifacts." >> report.md
        echo "" >> report.md
        echo "### 🔍 Test Details" >> report.md
        echo "All data validation and model evaluation tests passed successfully." >> report.md
        echo "" >> report.md
        echo "### 🚀 Pipeline Status" >> report.md
        echo "✅ Data validation: PASSED" >> report.md
        echo "✅ Model evaluation: PASSED" >> report.md
        echo "✅ DVC integration: PASSED" >> report.md
        echo "✅ Sanity test: PASSED" >> report.md
        echo "" >> report.md
        echo "### 🔢 Model Metrics" >> report.md
        cat iris-dvc-pipeline/metrics.txt >> report.md
    
    - name: Write CML report
      env:
        REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        cml comment create report.md
